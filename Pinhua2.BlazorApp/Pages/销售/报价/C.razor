@page "/销售/报价/新增"

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center mb-3">
    <h3>新增</h3>
</div>
<EditForm Model="main">
    <div class="row">
        <div class="col-12">
            <div class="row">
                <div class="col-md-6">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    @foreach (var model in Pinhua2.Common.MyAnnotations.MyAnnotations.Parse(main).Where(m => !m.Field.IsSystemField))
                    {
                        <div class="form-group row @(model.Field.IsHidden?"d-none":"")">
                            <label for="@model.Field.Name" class="col-3 col-form-label">@model.Field.ProcessedName</label>
                            <div class="col-9 col-md-9 col-lg-9">
                                @if (model.IsDatetime)
                                {
                                    <KDatePicker Model="model" Format="yyyy-MM-dd" Placeholder="输入日期 ..."></KDatePicker>
                                }
                                else if (model.IsDecimal)
                                {
                                    <input type="number" @bind="model.Field.ValueString" id="@model.Field.Name" class="form-control" />
                                }
                                else if (model.FormControl.IsDropdown)
                                {
                                    <KDropdown Model="model" Placeholder="请选择 ...">
                                        @if (model.Field.Name == "往来号")
                                        {
                                            foreach (var customer in pinhuaContext.DropdownOptions_客户())
                                            {
                                                <KDropdownOption Value="@customer.Value" Text="@customer.Text"></KDropdownOption>
                                            }
                                        }
                                    </KDropdown>
                                }
                                else
                                {
                                    <KInput Model="model" Readonly="true">
                                        <KInputExpression Condition="@(e=>e.Model.Field.Name == "备注")" Action="@(e => e.Input.Set(nameof(e.Input.Readonly), false))" />
                                        <KInputExpression Condition="@(e=>e.Model.Field.Name == "往来号")" Action="@(e => e.Input.Set(nameof(e.Input.Readonly), false))" />
                                    </KInput>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <div class="float-right mb-3">
                <button type="button" class="btn btn-primary" @onclick="@(e => ProductModal?.Show())">添加商品</button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <KTable DataSource="dingdanDetails" IsResponsive="true" IsBordered=" true" IsTextNoWrap="true" @ref="DetailsTable"
                    CheckBoxHeader="true" IsSingleSelect="true" IsClickToSelect="true">
                <KTableConditionContainer TItem="dto销售订单D">
                    <KTableHiddenCondition TItem="dto销售订单D" Predicate="m=>m.Model.IsSysColumn"></KTableHiddenCondition>
                    <KTableHiddenCondition TItem="dto销售订单D" Predicate="m=>m.Model.IsHiddenIndex"></KTableHiddenCondition>
                    <KTableFormatCondition TItem="dto销售订单D" Predicate="m=>m.Model.IsDatetime" ValueType="KTableValueType.DateTime" ValueFormat="yyyy-MM-dd"></KTableFormatCondition>
                    <KTableFormatCondition TItem="dto销售订单D" Predicate="m=>m.Model.IsDecimal" ValueType="KTableValueType.Decimal" ValueFormat="0.00"></KTableFormatCondition>
                </KTableConditionContainer>
                <KTableUserColumns TItem="dto销售订单D">
                    <KTableUserColumn TItem="dto销售订单D" Width="1" Context="thisRow">
                        <a href="javascript:;" class="mr-1">查看</a>
                        <a href="javascript:;" class="mr-1">修改</a>
                        <a href="javascript:;" @onclick="e=>DetailsTable.Remove(thisRow)">删除</a>
                    </KTableUserColumn>
                </KTableUserColumns>
            </KTable>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <KModal IsFade="false" IsBackdrop="false" IsCentered="false" Size="Size.ExtraLarge" @ref="ProductModal">
                <KModalHeader>商品列表</KModalHeader>
                <KModalBody>
                    <KTable DataSource="shangpinList" IsResponsive="true" IsBordered="true" IsTextNoWrap="true" IsHovarable="true"
                            CheckBoxHeader="true" IsClickToSelect="true" @ref="ProductTable">
                        <KTableConditionContainer TItem="dto商品">
                            <KTableHiddenCondition TItem="dto商品" Predicate="m=>m.Model.IsSysColumn"></KTableHiddenCondition>
                            <KTableHiddenCondition TItem="dto商品" Predicate="m=>m.Model.IsHiddenRef"></KTableHiddenCondition>
                            <KTableFormatCondition TItem="dto商品" Predicate="m=>m.Model.IsDatetime" ValueType="KTableValueType.DateTime" ValueFormat="yyyy-MM-dd"></KTableFormatCondition>
                            <KTableFormatCondition TItem="dto商品" Predicate="m=>m.Model.IsDecimal" ValueType="KTableValueType.Decimal" ValueFormat="0.00"></KTableFormatCondition>
                        </KTableConditionContainer>
                    </KTable>
                </KModalBody>
                <KModalFooter OnOK="e=>OKOK()"></KModalFooter>
            </KModal>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">保存</button>

</EditForm>

@code {
    protected dto销售报价 main = new dto销售报价();

    private void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");
    }

    KModal PriceModal;
    KModal ProductModal;

    protected List<tb_报价表D> baojiaDetails { get; set; }
    protected List<dto销售订单D> dingdanDetails { get; set; }
    protected List<dto商品> shangpinList { get; set; }

    protected KTable<tb_报价表D> ModalTable;
    protected KTable<dto销售订单D> DetailsTable;
    protected KTable<dto商品> ProductTable;

    protected override void OnInitialized()
    {
        baojiaDetails = pinhuaContext.tb_报价表D.ToList();
        dingdanDetails = mapper.ProjectTo<dto销售订单D>(pinhuaContext.tb_订单表D).ToList();
        shangpinList = mapper.ProjectTo<dto商品>(pinhuaContext.tb_商品表).ToList();
    }

    protected void OKOK()
    {
        var items = ProductTable.SelectedRows;
        var list = new List<dto销售订单D>();
        foreach (var item in items)
        {

            var tb_detail = mapper.Map<dto商品, tb_商品表>(item);
            var vm_detail = mapper.Map<tb_商品表, dto销售订单D>(tb_detail);

            DetailsTable.Add(vm_detail);
        }
        ProductTable.ChangeAllStatus(CheckBoxStatus.UnChecked);
        ProductModal.Hide();
    }
}