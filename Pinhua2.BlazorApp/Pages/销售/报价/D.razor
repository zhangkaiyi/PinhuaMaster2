@page "/销售/报价/删除/{RecordId:int}"

<div class="@(hideContainer?"d-none":"")">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center mb-3">
        <h3>删除</h3>
        <div>
            <button class="btn btn-primary"><i class="oi oi-pencil"></i> 修改</button>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <KModelDisplay DataSource="main">
                <KModelDisplayColumn class="col-md-6" Predicate="p=>!p.IsSysColumn"></KModelDisplayColumn>
                <KModelDisplayColumn class="col-md-6" Predicate="p=>p.IsSysColumn"></KModelDisplayColumn>
            </KModelDisplay>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <KTable DataSource="list_Detail" IsResponsive="true" IsBordered=" true" IsHovarable="true" IsTextNoWrap="true" @ref="table_Detail">
                <KTableConditionContainer TItem="dto销售报价D">
                    <KTableHiddenCondition TItem="dto销售报价D" Predicate="m=>m.Model.Field.IsSystemField"></KTableHiddenCondition>
                    <KTableHiddenCondition TItem="dto销售报价D" Predicate="m=>m.Model.Field.IsHiddenField"></KTableHiddenCondition>
                    <KTableFormatCondition TItem="dto销售报价D" Predicate="m=>m.Model.IsDatetime" ValueType="KTableValueType.DateTime" ValueFormat="yyyy-MM-dd"></KTableFormatCondition>
                    <KTableFormatCondition TItem="dto销售报价D" Predicate="m=>m.Model.IsDecimal" ValueType="KTableValueType.Decimal" ValueFormat="0.00"></KTableFormatCondition>
                </KTableConditionContainer>
            </KTable>
        </div>
    </div>

    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center mb-3">
        <button class="btn btn-primary" @onclick="@(e=>NavigationManager.NavigateTo("销售/报价/列表"))"><i class="oi oi-arrow-thick-left"></i> 返回</button>
        <button class="btn btn-primary"><i class="oi oi-arrow-thick-right"></i> 确认删除</button>
    </div>
</div>
@code {
    protected bool hideContainer = true;

    [Parameter] public int RecordId { get; set; }

    protected dto销售报价 main;

    protected List<dto销售报价D> list_Detail;

    protected KTable<dto销售报价D> table_Detail;

    protected override void OnInitialized()
    {
        main = mapper.Map<dto销售报价>(pinhuaContext.tb_报价表.AsNoTracking().FirstOrDefault(m => m.RecordId == RecordId));

        list_Detail = mapper.ProjectTo<dto销售报价D>(pinhuaContext.tb_报价表D.AsNoTracking()
            .Where(m => m.RecordId == RecordId)).ToList();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            StateHasChanged();
            return;
        }
        if (hideContainer)
        {
            hideContainer = false;
            StateHasChanged();
            return;
        }
    }
}