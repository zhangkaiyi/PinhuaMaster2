@page "/销售/报价/R/{RecordId:int}"

<div class="@(hideContainer?"d-none":"")">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center mb-3">
        <h3>查看</h3>
        <div>
            <button class="btn btn-primary"><i class="oi oi-pencil"></i> 修改</button>
        </div>
    </div>
    <div class="row">
        <div class="col-12">

        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <KTable DataSource="list_Detail" IsResponsive="true" IsBordered=" true" IsHovarable="true" IsTextNoWrap="true"
                    CheckBoxHeader="true" IsSingleSelect="true" IsClickToSelect="true" @ref="table_Detail">
                <ConditionContainer>
                    <KTableHiddenCondition TItem="dto销售报价D" Predicate="m=>m.Model.IsSysColumn"></KTableHiddenCondition>
                    <KTableHiddenCondition TItem="dto销售报价D" Predicate="m=>m.Model.IsHiddenDetails"></KTableHiddenCondition>
                    <KTableFormatCondition TItem="dto销售报价D" Predicate="m=>m.Model.IsDatetime" ValueType="KTableValueType.DateTime" ValueFormat="yyyy-MM-dd"></KTableFormatCondition>
                    <KTableFormatCondition TItem="dto销售报价D" Predicate="m=>m.Model.IsDecimal" ValueType="KTableValueType.Decimal" ValueFormat="0.00"></KTableFormatCondition>
                </ConditionContainer>
            </KTable>
        </div>
    </div>

    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center mb-3">
        <div>
            <button class="btn btn-primary" @onclick="@(e=>NavigationManager.NavigateTo("销售/报价/A"))"><i class="oi oi-arrow-thick-left"></i> 返回</button>
        </div>
    </div>
</div>

@code {
    protected bool hideContainer = true;

    [Parameter] public int RecordId { get; set; }

    protected List<dto销售报价D> list_Detail;

    protected KTable<dto销售报价D> table_Detail;

    protected override void OnInitialized()
    {
        list_Detail = mapper.ProjectTo<dto销售报价D>(pinhuaContext.tb_报价表D.AsNoTracking()
            .Where(m => m.RecordId == RecordId)).ToList();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            StateHasChanged();
            return;
        }
        if (hideContainer)
        {
            hideContainer = false;
            StateHasChanged();
            return;
        }
    }
}